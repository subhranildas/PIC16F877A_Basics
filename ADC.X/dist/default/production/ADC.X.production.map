Microchip MPLAB XC8 Compiler V2.30

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.30\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\ADC.X.production.sym \
  --cmf=dist/default/production\ADC.X.production.cmf -z -Q16F877A \
  -oC:\Users\subhr\AppData\Local\Temp\s60ox2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/ADC.X.production.map -E1 -ver=XC8 Compiler \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02007h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k C:\Users\subhr\AppData\Local\Temp\s60oxg.o \
  dist/default/production\ADC.X.production.o 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\subhr\AppData\Local\Temp\s60oxg.o
                end_init                              C        C        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1        0       4
dist/default/production\ADC.X.production.o
                cinit                                 F        F        4        8       0
                intentry                              4        4        8        8       0
                config                             2007     2007        1        0       4
                text9                               302      302        C      56E       0
                text8                               2D1      2D1       13      56E       0
                text7                               2E4      2E4       12      56E       0
                text6                               2F6      2F6        C      56E       0
                text5                               216      216       46        8       0
                text4                               1D0      1D0       46        8       0
                text3                               25C      25C       3C        8       0
                text2                                13       13       EA        8       0
                text1                               2B7      2B7       1A      56E       0
                maintext                             FD       FD       D3        8       0
                cstackBANK0                          20       20       29       20       1
                cstackCOMMON                         70       70        9       70       1
                strings                             298      298       1F      530       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              C        C        3         0
                cinit                                 F        F        4         0
                intentry                              4        4        8         0
                reset_vec                             0        0        3         0
                text9                               302      302        C         0
                text8                               2D1      2D1       13         0
                text7                               2E4      2E4       12         0
                text6                               2F6      2F6        C         0
                text5                               216      216       46         0
                text4                               1D0      1D0       46         0
                text3                               25C      25C       3C         0
                text2                                13       13       EA         0
                text1                               2B7      2B7       1A         0
                maintext                             FD       FD       D3         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             298      298       1F         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        9         1

        CLASS   BANK0          
                cstackBANK0                          20       20       29         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  000294  000298         8       0  CODE        2
                cstackBANK0                    000020  000029  000049        20       1  BANK0       1
                cstackCOMMON                   000070  000009  000079        70       1  COMMON      1
                strings                        000298  00001F  0002B7       530       0  STRING      2
                text1                          0002B7  000057  00030E       56E       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0049-006F             27           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         030E-1FFF            800
        COMMON           0079-007D              5           1
        CONST            0003-0003              1           2
                         030E-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         030E-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0049-006F             27           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         030E-1FFF           1CF2
        STRING           0003-0003              1           2
                         030E-1FFF            100

                                  Symbol Table

?___lwdiv                   cstackCOMMON 0075
?___lwmod                   cstackBANK0  0024
?_sprintf                   cstackBANK0  002A
USART_SEND_CHAR@ch          cstackCOMMON 0075
USART_SEND_INT@str          cstackBANK0  003A
USART_SEND_INT@val          cstackBANK0  0037
USART_SEND_STRING@i         cstackBANK0  0023
USART_SEND_STRING@str       cstackCOMMON 0076
_ADCON0                     (abs)        001F
_ADCON1                     (abs)        009F
_ADRESH                     (abs)        001E
_ADRESL                     (abs)        009E
_INTCON                     (abs)        000B
_PIE1                       (abs)        008C
_PORTB                      (abs)        0006
_RCREG                      (abs)        001A
_RCSTA                      (abs)        0018
_SPBRG                      (abs)        0099
_TRISB                      (abs)        0086
_TRISC                      (abs)        0087
_TRMT                       (abs)        04C1
_TXREG                      (abs)        0019
_TXSTA                      (abs)        0098
_USART_INIT                 text7        02E4
_USART_SEND_CHAR            text6        02F6
_USART_SEND_INT             text1        02B7
_USART_SEND_STRING          text5        0216
__Habs1                     abs1         0000
__Hbank0                    bank0        0000
__Hbank1                    bank1        0000
__Hbank2                    bank2        0000
__Hbank3                    bank3        0000
__Hcinit                    cinit        0013
__Hclrtext                  clrtext      0000
__Hcode                     code         0000
__Hcommon                   common       0000
__Hconfig                   config       2008
__HcstackBANK0              cstackBANK0  0000
__HcstackCOMMON             cstackCOMMON 0000
__Heeprom_data              eeprom_data  0000
__Hend_init                 end_init     000F
__Hfunctab                  functab      0000
__Hinit                     init         000C
__Hintentry                 intentry     000C
__Hmaintext                 maintext     0000
__Hpowerup                  powerup      0000
__Hram                      ram          0000
__Hreset_vec                reset_vec    0003
__Hsfr0                     sfr0         0000
__Hsfr1                     sfr1         0000
__Hsfr2                     sfr2         0000
__Hsfr3                     sfr3         0000
__Hspace_0                  (abs)        030E
__Hspace_1                  (abs)        0079
__Hspace_2                  (abs)        0000
__Hspace_3                  (abs)        0000
__Hspace_4                  (abs)        400F
__Hstack                    stack        0000
__Hstrings                  strings      0000
__Htext                     text         0000
__Labs1                     abs1         0000
__Lbank0                    bank0        0000
__Lbank1                    bank1        0000
__Lbank2                    bank2        0000
__Lbank3                    bank3        0000
__Lcinit                    cinit        000F
__Lclrtext                  clrtext      0000
__Lcode                     code         0000
__Lcommon                   common       0000
__Lconfig                   config       0000
__LcstackBANK0              cstackBANK0  0000
__LcstackCOMMON             cstackCOMMON 0000
__Leeprom_data              eeprom_data  0000
__Lend_init                 end_init     000C
__Lfunctab                  functab      0000
__Linit                     init         000C
__Lintentry                 intentry     0004
__Lmaintext                 maintext     0000
__Lpowerup                  powerup      0000
__Lram                      ram          0000
__Lreset_vec                reset_vec    0000
__Lsfr0                     sfr0         0000
__Lsfr1                     sfr1         0000
__Lsfr2                     sfr2         0000
__Lsfr3                     sfr3         0000
__Lspace_0                  (abs)        0000
__Lspace_1                  (abs)        0000
__Lspace_2                  (abs)        0000
__Lspace_3                  (abs)        0000
__Lspace_4                  (abs)        0000
__Lstack                    stack        0000
__Lstrings                  strings      0000
__Ltext                     text         0000
__S0                        (abs)        030E
__S1                        (abs)        0079
__S2                        (abs)        0000
__S3                        (abs)        0000
___int_sp                   stack        0000
___latbits                  (abs)        0002
___lwdiv                    text4        01D0
___lwdiv@counter            cstackBANK0  0023
___lwdiv@dividend           cstackCOMMON 0077
___lwdiv@divisor            cstackCOMMON 0075
___lwdiv@quotient           cstackBANK0  0021
___lwmod                    text3        025C
___lwmod@counter            cstackBANK0  0029
___lwmod@dividend           cstackBANK0  0026
___lwmod@divisor            cstackBANK0  0024
___sp                       stack        0000
___stackhi                  (abs)        0000
___stacklo                  (abs)        0000
__end_of_USART_INIT         text7        02F6
__end_of_USART_SEND_CHAR    text6        0302
__end_of_USART_SEND_INT     text1        02D1
__end_of_USART_SEND_STRING  text5        025C
__end_of___lwdiv            text4        0216
__end_of___lwmod            text3        0298
__end_of__initialization    cinit        000F
__end_of__stringtab         strings      02A8
__end_of_dpowers            strings      02B2
__end_of_isr                text8        02E4
__end_of_main               maintext     01D0
__end_of_sprintf            text2        00FD
__end_ofi1_USART_SEND_CHAR  text9        030E
__initialization            cinit        000F
__pcstackBANK0              cstackBANK0  0020
__pcstackCOMMON             cstackCOMMON 0070
__pintentry                 intentry     0004
__pmaintext                 maintext     00FD
__pstrings                  strings      0298
__ptext1                    text1        02B7
__ptext2                    text2        0013
__ptext3                    text3        025C
__ptext4                    text4        01D0
__ptext5                    text5        0216
__ptext6                    text6        02F6
__ptext7                    text7        02E4
__ptext8                    text8        02D1
__ptext9                    text9        0302
__size_of_USART_INIT        (abs)        0000
__size_of_USART_SEND_CHAR   (abs)        0000
__size_of_USART_SEND_INT    (abs)        0000
__size_of_USART_SEND_STRING (abs)        0000
__size_of___lwdiv           (abs)        0000
__size_of___lwmod           (abs)        0000
__size_of_isr               (abs)        0000
__size_of_main              (abs)        0000
__size_of_sprintf           (abs)        0000
__size_ofi1_USART_SEND_CHAR (abs)        0000
__stringbase                strings      02A7
__stringtab                 strings      0298
_dpowers                    strings      02A8
_isr                        text8        02D1
_main                       maintext     00FD
_sprintf                    text2        0013
btemp                       (abs)        007E
end_of_initialization       cinit        000F
i1USART_SEND_CHAR@ch        cstackCOMMON 0070
i1_USART_SEND_CHAR          text9        0302
interrupt_function          intentry     0004
intlevel0                   functab      0000
intlevel1                   functab      0000
intlevel2                   functab      0000
intlevel3                   functab      0000
intlevel4                   functab      0000
intlevel5                   functab      0000
isr@received                cstackCOMMON 0074
main@val                    cstackBANK0  0047
reset_vec                   reset_vec    0000
saved_w                     (abs)        007E
sprintf@ap                  cstackBANK0  0030
sprintf@c                   cstackBANK0  0036
sprintf@f                   cstackBANK0  002A
sprintf@flag                cstackBANK0  0031
sprintf@prec                cstackBANK0  0032
sprintf@sp                  cstackBANK0  0035
sprintf@val                 cstackBANK0  0033
start                       init         000C
start_initialization        cinit        000F
wtemp0                      (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 31 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  val             2   39[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_USART_INIT
		_USART_SEND_INT
		_USART_SEND_STRING
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _USART_SEND_INT *****************
 Defined at:
		line 32 in file "USART.c"
 Parameters:    Size  Location     Type
  val             2   23[BANK0 ] int 
 Auto vars:     Size  Location     Type
  str            10   26[BANK0 ] unsigned char [10]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0      10       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0      13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_USART_SEND_STRING
		_sprintf
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 505 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              1    wreg     PTR unsigned char 
		 -> USART_SEND_INT@str(10), 
  f               1   10[BANK0 ] PTR const unsigned char 
		 -> STR_2(3), 
 Auto vars:     Size  Location     Type
  sp              1   21[BANK0 ] PTR unsigned char 
		 -> USART_SEND_INT@str(10), 
  tmpval          4    0        struct .
  val             2   19[BANK0 ] unsigned int 
  cp              2    0        PTR const unsigned char 
  len             2    0        unsigned int 
  c               1   22[BANK0 ] unsigned char 
  prec            1   18[BANK0 ] char 
  flag            1   17[BANK0 ] unsigned char 
  ap              1   16[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
 Return value:  Size  Location     Type
                  2   10[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       7       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___lwdiv
		___lwmod
 This function is called by:
		_USART_SEND_INT
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    4[BANK0 ] unsigned int 
  dividend        2    6[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1    9[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    4[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    5[COMMON] unsigned int 
  dividend        2    7[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    1[BANK0 ] unsigned int 
  counter         1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    5[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       1       0       0       0
      Totals:         4       4       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _USART_SEND_STRING *****************
 Defined at:
		line 27 in file "USART.c"
 Parameters:    Size  Location     Type
  str             2    6[COMMON] PTR unsigned char 
		 -> USART_SEND_INT@str(10), STR_1(2), 
 Auto vars:     Size  Location     Type
  i               2    3[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       3       0       0       0
      Totals:         2       5       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_USART_SEND_CHAR
 This function is called by:
		_main
		_USART_SEND_INT
 This function uses a non-reentrant model


 *************** function _USART_SEND_CHAR *****************
 Defined at:
		line 22 in file "USART.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ch              1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_USART_SEND_STRING
 This function uses a non-reentrant model


 *************** function _USART_INIT *****************
 Defined at:
		line 11 in file "USART.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 41 in file "USART.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  received        1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_USART_SEND_CHAR
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function i1_USART_SEND_CHAR *****************
 Defined at:
		line 22 in file "USART.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ch              1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isr
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c
		___lwmod       		CODE           	025C	0000	60

C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c estimated size: 60

USART.c
		_USART_SEND_INT		CODE           	02B7	0000	26
		_USART_SEND_CHAR		CODE           	02F6	0000	12
		_USART_SEND_STRING		CODE           	0216	0000	70
		_isr           		CODE           	02D1	0000	19
		_USART_INIT    		CODE           	02E4	0000	18

USART.c estimated size: 145

C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c
		___lwdiv       		CODE           	01D0	0000	70

C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c estimated size: 70

C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c
		_sprintf       		CODE           	0013	0000	234

C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c estimated size: 234

shared
		__stringtab    		STRING         	0298	0000	16
		_dpowers       		STRING         	02A8	0000	10
		i1_USART_SEND_CHAR		CODE           	0302	0000	12
		__initialization		CODE           	000F	0000	1

shared estimated size: 39

main.c
		_main          		CODE           	00FD	0000	211

main.c estimated size: 211

