

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Sep 22 23:47:35 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0006                     _PORTB	set	6
   169  005A                     _TMR0IF	set	90
   170  005D                     _TMR0IE	set	93
   171  005E                     _PEIE	set	94
   172  005F                     _GIE	set	95
   173  0086                     _TRISB	set	134
   174  0408                     _PS0	set	1032
   175  0409                     _PS1	set	1033
   176  040A                     _PS2	set	1034
   177  040B                     _PSA	set	1035
   178  040C                     _T0SE	set	1036
   179  040D                     _T0CS	set	1037
   180                           
   181                           	psect	cinit
   182  0013                     start_initialization:	
   183                           ; #config settings
   184                           
   185  0013                     __initialization:
   186                           
   187                           ; Clear objects allocated to COMMON
   188  0013  01F4               	clrf	__pbssCOMMON& (0+127)
   189  0014  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   190  0015                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193  0015                     __end_of__initialization:
   194  0015  0183               	clrf	3
   195  0016  120A  118A  2844   	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMMON
   198  0074                     __pbssCOMMON:
   199  0074                     _i:
   200  0074                     	ds	2
   201                           
   202                           	psect	cstackCOMMON
   203  0070                     __pcstackCOMMON:
   204  0070                     ?_TIM0_INIT:
   205  0070                     ?_main:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0070                     ?_ISR:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  0070                     ??_ISR:	
   212                           ; 1 bytes @ 0x0
   213                           
   214                           
   215                           ; 1 bytes @ 0x0
   216  0070                     	ds	4
   217  0074                     ??_TIM0_INIT:
   218  0074                     ??_main:	
   219                           ; 1 bytes @ 0x4
   220                           
   221                           
   222                           	psect	maintext
   223  0044                     __pmaintext:	
   224                           ; 1 bytes @ 0x4
   225 ;;
   226 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   227 ;;
   228 ;; *************** function _main *****************
   229 ;; Defined at:
   230 ;;		line 22 in file "main.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;		None
   235 ;; Return value:  Size  Location     Type
   236 ;;                  1    wreg      void 
   237 ;; Registers used:
   238 ;;		status,2, status,0, pclath, cstack
   239 ;; Tracked objects:
   240 ;;		On entry : B00/0
   241 ;;		On exit  : 0/0
   242 ;;		Unchanged: 0/0
   243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   244 ;;      Params:         0       0       0       0       0
   245 ;;      Locals:         0       0       0       0       0
   246 ;;      Temps:          0       0       0       0       0
   247 ;;      Totals:         0       0       0       0       0
   248 ;;Total ram usage:        0 bytes
   249 ;; Hardware stack levels required when called:    2
   250 ;; This function calls:
   251 ;;		_TIM0_INIT
   252 ;; This function is called by:
   253 ;;		Startup code after reset
   254 ;; This function uses a non-reentrant model
   255 ;;
   256                           
   257                           
   258                           ;psect for function _main
   259  0044                     _main:
   260  0044                     l640:	
   261                           ;incstack = 0
   262                           ; Regs used in _main: [status,2+status,0+pclath+cstack]
   263                           
   264                           
   265                           ;main.c: 24:     TIM0_INIT();
   266  0044  120A  118A  2053  120A  118A  	fcall	_TIM0_INIT
   267  0049                     l642:
   268                           
   269                           ;main.c: 25:     TRISB = 0x00;
   270  0049  1683               	bsf	3,5	;RP0=1, select bank1
   271  004A  1303               	bcf	3,6	;RP1=0, select bank1
   272  004B  0186               	clrf	6	;volatile
   273  004C                     l644:
   274                           
   275                           ;main.c: 26:     PORTB = 0x00;
   276  004C  1283               	bcf	3,5	;RP0=0, select bank0
   277  004D  1303               	bcf	3,6	;RP1=0, select bank0
   278  004E  0186               	clrf	6	;volatile
   279  004F                     l33:	
   280                           ;main.c: 27:     while(1){
   281                           
   282  004F                     l34:	
   283                           ;main.c: 29:     }
   284                           
   285  004F  284F               	goto	l33
   286  0050  120A  118A  2810   	ljmp	start
   287  0053                     __end_of_main:
   288                           
   289                           	psect	text1
   290  0053                     __ptext1:	
   291 ;; *************** function _TIM0_INIT *****************
   292 ;; Defined at:
   293 ;;		line 32 in file "main.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		None
   302 ;; Tracked objects:
   303 ;;		On entry : 0/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   307 ;;      Params:         0       0       0       0       0
   308 ;;      Locals:         0       0       0       0       0
   309 ;;      Temps:          0       0       0       0       0
   310 ;;      Totals:         0       0       0       0       0
   311 ;;Total ram usage:        0 bytes
   312 ;; Hardware stack levels used:    1
   313 ;; Hardware stack levels required when called:    1
   314 ;; This function calls:
   315 ;;		Nothing
   316 ;; This function is called by:
   317 ;;		_main
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           
   322                           ;psect for function _TIM0_INIT
   323  0053                     _TIM0_INIT:
   324  0053                     l638:	
   325                           ;incstack = 0
   326                           ; Regs used in _TIM0_INIT: []
   327                           
   328                           
   329                           ;main.c: 33:     T0CS = 0;
   330  0053  1683               	bsf	3,5	;RP0=1, select bank1
   331  0054  1303               	bcf	3,6	;RP1=0, select bank1
   332  0055  1281               	bcf	1,5	;volatile
   333                           
   334                           ;main.c: 34:     T0SE = 1;
   335  0056  1601               	bsf	1,4	;volatile
   336                           
   337                           ;main.c: 35:     PSA = 0;
   338  0057  1181               	bcf	1,3	;volatile
   339                           
   340                           ;main.c: 36:     PS2 = 1;
   341  0058  1501               	bsf	1,2	;volatile
   342                           
   343                           ;main.c: 37:     PS1 = 1;
   344  0059  1481               	bsf	1,1	;volatile
   345                           
   346                           ;main.c: 38:     PS0 = 1;
   347  005A  1401               	bsf	1,0	;volatile
   348                           
   349                           ;main.c: 39:     GIE = 1;
   350  005B  178B               	bsf	11,7	;volatile
   351                           
   352                           ;main.c: 40:     PEIE = 1;
   353  005C  170B               	bsf	11,6	;volatile
   354                           
   355                           ;main.c: 41:     TMR0IE =1;
   356  005D  168B               	bsf	11,5	;volatile
   357  005E                     l39:
   358  005E  0008               	return
   359  005F                     __end_of_TIM0_INIT:
   360                           
   361                           	psect	text2
   362  0019                     __ptext2:	
   363 ;; *************** function _ISR *****************
   364 ;; Defined at:
   365 ;;		line 44 in file "main.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;		None
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg, status,2, status,0, btemp+1
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   379 ;;      Params:         0       0       0       0       0
   380 ;;      Locals:         0       0       0       0       0
   381 ;;      Temps:          4       0       0       0       0
   382 ;;      Totals:         4       0       0       0       0
   383 ;;Total ram usage:        4 bytes
   384 ;; Hardware stack levels used:    1
   385 ;; This function calls:
   386 ;;		Nothing
   387 ;; This function is called by:
   388 ;;		Interrupt level 1
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           
   393                           ;psect for function _ISR
   394  0019                     _ISR:
   395  0019                     i1l646:
   396                           
   397                           ;main.c: 45:     if(TMR0IF == 1){
   398  0019  1D0B               	btfss	11,2	;volatile
   399  001A  281C               	goto	u1_21
   400  001B  281D               	goto	u1_20
   401  001C                     u1_21:
   402  001C  2839               	goto	i1l46
   403  001D                     u1_20:
   404  001D                     i1l648:
   405                           
   406                           ;main.c: 46:         TMR0IF = 0;
   407  001D  110B               	bcf	11,2	;volatile
   408  001E                     i1l650:
   409                           
   410                           ;main.c: 47:         i++;
   411  001E  3001               	movlw	1
   412  001F  07F4               	addwf	_i,f
   413  0020  1803               	skipnc
   414  0021  0AF5               	incf	_i+1,f
   415  0022  3000               	movlw	0
   416  0023  07F5               	addwf	_i+1,f
   417  0024                     i1l652:
   418                           
   419                           ;main.c: 48:         if(i > 76){
   420  0024  0875               	movf	_i+1,w
   421  0025  3A80               	xorlw	128
   422  0026  00FF               	movwf	btemp+1
   423  0027  3080               	movlw	128
   424  0028  027F               	subwf	btemp+1,w
   425  0029  1D03               	skipz
   426  002A  282D               	goto	u2_25
   427  002B  304D               	movlw	77
   428  002C  0274               	subwf	_i,w
   429  002D                     u2_25:
   430  002D  1C03               	skipc
   431  002E  2830               	goto	u2_21
   432  002F  2831               	goto	u2_20
   433  0030                     u2_21:
   434  0030  2839               	goto	i1l46
   435  0031                     u2_20:
   436  0031                     i1l654:
   437                           
   438                           ;main.c: 49:             i = 0;
   439  0031  01F4               	clrf	_i
   440  0032  01F5               	clrf	_i+1
   441  0033                     i1l656:
   442                           
   443                           ;main.c: 50:             PORTB ^= 0x0F;
   444  0033  300F               	movlw	15
   445  0034  00F0               	movwf	??_ISR
   446  0035  0870               	movf	??_ISR,w
   447  0036  1283               	bcf	3,5	;RP0=0, select bank0
   448  0037  1303               	bcf	3,6	;RP1=0, select bank0
   449  0038  0686               	xorwf	6,f	;volatile
   450  0039                     i1l46:
   451  0039  0873               	movf	??_ISR+3,w
   452  003A  1283               	bcf	3,5	;RP0=0, select bank0
   453  003B  1303               	bcf	3,6	;RP1=0, select bank0
   454  003C  00FF               	movwf	btemp+1
   455  003D  0872               	movf	??_ISR+2,w
   456  003E  008A               	movwf	10
   457  003F  0E71               	swapf	??_ISR+1,w
   458  0040  0083               	movwf	3
   459  0041  0EFE               	swapf	btemp,f
   460  0042  0E7E               	swapf	btemp,w
   461  0043  0009               	retfie
   462  0044                     __end_of_ISR:
   463  007E                     btemp	set	126	;btemp
   464  007E                     wtemp0	set	126
   465                           
   466                           	psect	intentry
   467  0004                     __pintentry:	
   468                           ;incstack = 0
   469                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
   470                           
   471  0004                     interrupt_function:
   472  007E                     saved_w	set	btemp
   473  0004  00FE               	movwf	btemp
   474  0005  0E03               	swapf	3,w
   475  0006  00F1               	movwf	??_ISR+1
   476  0007  080A               	movf	10,w
   477  0008  00F2               	movwf	??_ISR+2
   478  0009  1283               	bcf	3,5	;RP0=0, select bank0
   479  000A  1303               	bcf	3,6	;RP1=0, select bank0
   480  000B  087F               	movf	btemp+1,w
   481  000C  00F3               	movwf	??_ISR+3
   482  000D  120A  118A  2819   	ljmp	_ISR
   483                           
   484                           	psect	config
   485                           
   486                           ;Config register CONFIG @ 0x2007
   487                           ;	Oscillator Selection bits
   488                           ;	FOSC = HS, HS oscillator
   489                           ;	Watchdog Timer Enable bit
   490                           ;	WDTE = OFF, WDT disabled
   491                           ;	Power-up Timer Enable bit
   492                           ;	PWRTE = OFF, PWRT disabled
   493                           ;	Brown-out Reset Enable bit
   494                           ;	BOREN = OFF, BOR disabled
   495                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   496                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   497                           ;	Data EEPROM Memory Code Protection bit
   498                           ;	CPD = OFF, Data EEPROM code protection off
   499                           ;	Flash Program Memory Write Enable bits
   500                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   501                           ;	In-Circuit Debugger Mode bit
   502                           ;	DEBUG = 0x1, unprogrammed default
   503                           ;	Flash Program Memory Code Protection bit
   504                           ;	CP = OFF, Code protection off
   505  2007                     	org	8199
   506  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _TIM0_INIT
 ---------------------------------------------------------------------------------
 (1) _TIM0_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TIM0_INIT

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Sep 22 23:47:35 2020

                      _i 0074                       l33 004F                       l34 004F  
                     l39 005E                      l640 0044                      l642 0049  
                    l644 004C                      l638 0053                      _GIE 005F  
                    _PS0 0408                      _PS1 0409                      _PS2 040A  
                    _ISR 0019                      _PSA 040B                     ?_ISR 0070  
                   _T0CS 040D                     _T0SE 040C                     _PEIE 005E  
                   i1l46 0039                     u1_20 001D                     u1_21 001C  
                   u2_20 0031                     u2_21 0030                     u2_25 002D  
                   _main 0044                     btemp 007E                     start 0010  
                  ??_ISR 0070       __size_of_TIM0_INIT 000C                    ?_main 0070  
                  i1l650 001E                    i1l652 0024                    i1l654 0031  
                  i1l646 0019                    i1l656 0033                    i1l648 001D  
                  _PORTB 0006                    _TRISB 0086                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0013  
           __end_of_main 0053                   ??_main 0074                   _TMR0IE 005D  
                 _TMR0IF 005A        __end_of_TIM0_INIT 005F                   saved_w 007E  
__end_of__initialization 0015           __pcstackCOMMON 0070               __pmaintext 0044  
             __pintentry 0004                  __ptext1 0053                  __ptext2 0019  
           __size_of_ISR 002B     end_of_initialization 0015                _TIM0_INIT 0053  
             ?_TIM0_INIT 0070      start_initialization 0013              __end_of_ISR 0044  
            __pbssCOMMON 0074                ___latbits 0002              ??_TIM0_INIT 0074  
      interrupt_function 0004            __size_of_main 000F                 intlevel1 0000  
